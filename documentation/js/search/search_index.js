var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.006,1,1.784]],["body/modules/AppModule.html",[0,1.345,1,3.211,2,0.964,3,0.964,4,1.212,5,1.212,6,0.964,7,1.777,8,1.212,9,1.843,10,1.843,11,2.295,12,0.042,13,2.579,14,2.579,15,1.777,16,1.212,17,1.212,18,0.286,19,0.241,20,0.241,21,2.252,22,1.581,23,2.105,24,2.733,25,0.881,26,0.622,27,3.525,28,2.308,29,3.302,30,1.843,31,1.373,32,1.843,33,2.308,34,2.252,35,2.252,36,2.252,37,2.252,38,2.252,39,2.252,40,2.252,41,1.574,42,2.252,43,1.843,44,2.252,45,2.252,46,2.252,47,0.964,48,2.252,49,2.252,50,2.252,51,0.286,52,0.241,53,0.016,54,0.024,55,0.016]],["title/modules/CommonModule.html",[0,1.006,11,1.401]],["body/modules/CommonModule.html",[0,1.506,2,1.182,3,1.182,4,1.486,5,1.486,6,1.182,7,2.356,8,2.356,11,2.636,12,0.041,15,2.056,16,1.486,17,1.486,18,0.35,19,0.296,20,0.296,25,0.744,26,0.762,51,0.35,52,0.296,53,0.02,54,0.027,55,0.02,56,2.26,57,2.26,58,2.26,59,2.686,60,3.019,61,2.762,62,1.93,63,1.93,64,3.126,65,1.93,66,1.683]],["title/classes/CreateSubscriptionDto.html",[52,0.313,67,1.575]],["body/classes/CreateSubscriptionDto.html",[12,0.041,18,0.334,19,0.282,20,0.282,25,0.628,51,0.334,52,0.496,53,0.019,54,0.027,55,0.019,67,1.991,68,1.608,69,3.236,70,1.843,71,0.511,72,1.418,73,3.762,74,1.828,75,2.045,76,2.045,77,1.068,78,1.346,79,2.299,80,3.533,81,1.179,82,2.638,83,2.822,84,2.638,85,2.638,86,2.638,87,1.843,88,3.027,89,3.027,90,1.608,91,1.263,92,1.419,93,2.159]],["title/classes/CreateUserDto.html",[52,0.313,94,1.575]],["body/classes/CreateUserDto.html",[12,0.041,18,0.403,19,0.341,20,0.341,25,0.541,51,0.403,52,0.45,53,0.023,54,0.03,55,0.023,68,1.94,71,0.616,72,1.612,73,3.737,74,2.014,77,0.921,78,1.382,79,2.262,80,3.638,81,1.16,90,1.94,94,2.262,95,3.852,96,2.605,97,3.289,98,3.182,99,3.182]],["title/injectables/ExpoNotifierService.html",[59,1.401,100,1.006]],["body/injectables/ExpoNotifierService.html",[12,0.042,18,0.251,19,0.212,20,0.212,25,0.615,26,0.546,47,1.549,51,0.251,52,0.212,53,0.014,54,0.022,55,0.014,59,1.435,65,3.498,66,2.462,71,0.383,72,1.15,75,2.272,76,2.079,77,0.657,78,0.999,81,0.999,91,0.947,92,1.065,100,1.031,101,1.065,102,2.462,103,1.382,104,1.435,105,2.454,106,2.207,107,2.998,108,2.454,109,1.729,110,1.978,111,0.947,112,0.846,113,0.947,114,0.947,115,2.095,116,2.998,117,2.998,118,2.095,119,2.454,120,0.758,121,1.978,122,2.095,123,1.978,124,1.978,125,1.978,126,1.613,127,2.998,128,1.978,129,2.095,130,1.978,131,1.978,132,1.978,133,1.978,134,1.978,135,1.382,136,1.978,137,1.065,138,1.978,139,1.978,140,2.53,141,1.382,142,1.206,143,1.978,144,1.382,145,2.53,146,2.454,147,2.454,148,1.619,149,1.619,150,1.619,151,1.619,152,0.947,153,1.978]],["title/injectables/FirebaseNotifierService.html",[60,1.575,100,1.006]],["body/injectables/FirebaseNotifierService.html",[12,0.042,18,0.243,19,0.205,20,0.205,25,0.675,26,0.528,27,3.691,28,1.337,47,1.518,51,0.243,52,0.205,53,0.014,54,0.021,55,0.014,60,1.573,62,1.337,63,2.775,71,0.37,72,1.121,75,2.246,76,1.4,77,0.87,78,1.096,81,0.979,92,1.03,100,1.005,101,1.03,103,1.337,104,1.4,105,2.392,106,1.166,108,2.392,109,1.699,111,1.4,112,1.251,113,1.4,114,0.916,120,0.734,126,1.03,129,1.337,135,1.337,140,2.775,141,1.337,142,1.166,144,1.337,145,2.479,146,2.392,147,2.392,148,1.566,149,1.566,150,1.566,151,1.566,152,0.916,154,2.775,155,2.903,156,3.547,157,1.913,158,2.923,159,1.913,160,2.392,161,1.913,162,1.913,163,1.913,164,1.913,165,1.913,166,1.913,167,1.913,168,1.913,169,1.913,170,1.913,171,1.913,172,1.913,173,1.913,174,1.913,175,1.913,176,1.913,177,1.913,178,1.913,179,1.913,180,1.913,181,1.913,182,1.913,183,1.913,184,1.913,185,1.913,186,1.913,187,1.913,188,1.913]],["title/interfaces/IMessage.html",[109,1.252,189,1.006]],["body/interfaces/IMessage.html",[12,0.041,18,0.442,19,0.373,20,0.373,25,0.592,51,0.442,53,0.025,54,0.032,55,0.025,71,0.675,72,1.71,77,0.977,78,1.357,91,2.482,92,2.79,102,2.124,109,1.908,120,1.337,137,1.876,189,1.199,190,2.436,191,3.16]],["title/interfaces/IMessage-1.html",[109,1.05,189,0.844,192,2.454]],["body/interfaces/IMessage-1.html",[12,0.039,18,0.488,19,0.412,20,0.412,51,0.488,53,0.028,54,0.034,55,0.028,78,1.483,81,1.063,109,2.032,120,1.477,137,2.073,154,3.319,189,1.325,190,2.692,193,3.153,194,3.887,195,3.853]],["title/interfaces/IMessageData.html",[189,1.006,191,1.784]],["body/interfaces/IMessageData.html",[12,0.039,18,0.488,19,0.412,20,0.412,51,0.488,53,0.028,54,0.034,55,0.028,78,1.483,81,1.063,102,2.895,120,1.477,137,2.073,189,1.325,191,2.895,193,3.153,194,3.887,196,3.153,197,3.853]],["title/controllers/IssController.html",[23,1.575,198,1.575]],["body/controllers/IssController.html",[12,0.042,18,0.342,19,0.289,20,0.289,22,1.292,23,2.023,25,0.735,26,0.745,47,1.851,51,0.342,52,0.289,53,0.019,54,0.027,55,0.019,67,2.811,71,0.522,74,1.608,75,1.799,76,1.799,77,0.591,78,0.745,79,1.452,81,0.745,91,1.292,104,1.799,111,1.292,112,1.155,113,1.292,114,1.292,115,2.626,126,2.023,140,2.626,142,1.645,152,1.292,198,1.452,199,2.208,200,2.208,201,2.698,202,3.076,203,2.698,204,3.539,205,2.698,206,2.071,207,2.208,208,1.886,209,2.698,210,1.886,211,2.698,212,2.698,213,2.698,214,2.698]],["title/modules/IssModule.html",[0,1.006,13,1.575]],["body/modules/IssModule.html",[0,1.506,2,1.182,3,1.182,4,1.486,5,1.486,6,1.182,7,2.356,8,2.356,11,2.456,12,0.041,13,2.927,15,2.056,16,1.486,17,1.486,18,0.35,19,0.296,20,0.296,22,1.829,23,2.356,24,2.669,25,0.803,26,0.762,32,2.26,51,0.35,52,0.296,53,0.02,54,0.027,55,0.02,206,2.686,207,2.26,215,2.26,216,2.762,217,2.26,218,2.26,219,2.762,220,2.762]],["title/injectables/IssService.html",[100,1.006,206,1.401]],["body/injectables/IssService.html",[12,0.041,18,0.355,19,0.3,20,0.3,25,0.655,26,0.773,47,1.888,51,0.355,52,0.3,53,0.02,54,0.028,55,0.02,59,1.341,64,2.293,66,1.708,71,0.542,72,1.479,75,2.276,76,1.341,77,0.845,81,1.218,100,1.327,101,1.508,104,1.847,106,1.708,111,1.847,112,1.651,113,1.847,114,1.341,152,1.341,202,3.157,206,1.847,210,1.958,221,2.293,222,3.857,223,5.456,224,2.802,225,2.802,226,3.857,227,2.802,228,2.802,229,2.802,230,2.802]],["title/classes/MessageDto.html",[52,0.313,83,1.784]],["body/classes/MessageDto.html",[12,0.041,18,0.362,19,0.306,20,0.306,25,0.664,51,0.362,52,0.513,53,0.021,54,0.028,55,0.021,67,1.537,68,1.741,69,3.114,70,1.996,71,0.553,72,1.499,73,3.114,74,1.222,75,1.368,76,1.368,77,1.049,78,1.323,79,2.104,80,3.507,81,1.079,83,2.921,87,1.996,88,3.647,89,3.199,90,1.741,91,2.134,92,2.398,93,3.199,231,2.856,232,2.856]],["title/interfaces/User.html",[189,1.006,233,1.252]],["body/interfaces/User.html",[12,0.04,18,0.437,19,0.369,20,0.369,25,0.585,51,0.437,53,0.025,54,0.032,55,0.025,71,0.667,72,1.697,74,2.209,77,0.969,78,1.508,97,3.607,120,1.321,189,1.185,233,1.894,234,2.819,235,4.426,236,4.89,237,2.407]],["title/controllers/UserController.html",[198,1.575,238,1.784]],["body/controllers/UserController.html",[12,0.042,18,0.341,19,0.287,20,0.287,22,1.286,25,0.733,26,0.741,47,1.846,51,0.341,52,0.287,53,0.019,54,0.027,55,0.019,71,0.52,77,0.588,79,1.446,81,0.741,91,1.286,94,2.736,104,1.794,111,1.286,112,1.149,113,1.286,114,1.286,115,2.618,129,1.877,141,1.877,142,1.637,144,1.877,145,3.262,152,1.286,198,1.446,200,2.198,204,3.531,208,1.877,210,1.877,233,1.997,238,2.283,239,2.198,240,3.746,241,2.686,242,2.686,243,2.065,244,2.198,245,2.686,246,2.686,247,2.686,248,2.686,249,2.686,250,2.686]],["title/modules/UserModule.html",[0,1.006,14,1.575]],["body/modules/UserModule.html",[0,1.525,2,1.211,3,1.211,4,1.522,5,1.522,6,1.211,7,2.386,8,1.522,12,0.042,14,2.78,15,2.09,16,1.522,17,1.522,18,0.359,19,0.303,20,0.303,22,1.859,24,1.977,25,0.85,26,0.781,30,2.315,31,1.724,51,0.492,52,0.303,53,0.02,54,0.028,55,0.02,112,1.211,126,1.522,233,1.211,238,2.702,243,2.474,244,2.315,251,2.315,252,2.315,253,1.977,254,2.829,255,2.713,256,2.829,257,2.713,258,2.829,259,2.829]],["title/injectables/UserService.html",[100,1.006,243,1.401]],["body/injectables/UserService.html",[12,0.042,18,0.317,19,0.268,20,0.268,25,0.812,26,0.691,31,1.525,43,2.917,47,1.776,51,0.317,52,0.268,53,0.018,54,0.026,55,0.018,71,0.484,74,1.525,77,0.781,81,0.984,94,2.434,100,1.226,101,1.347,104,1.706,106,1.525,111,1.706,112,1.525,113,1.706,114,1.198,120,0.959,126,1.918,135,2.49,152,1.198,155,2.048,208,1.749,233,1.071,237,1.749,243,1.706,260,2.048,261,3.564,262,2.502,263,4.523,264,2.502,265,3.564,266,3.564,267,2.502,268,4.151,269,2.502,270,2.502,271,2.502,272,2.502,273,2.502]],["title/coverage.html",[274,2.777]],["body/coverage.html",[6,1.002,12,0.041,20,0.251,23,1.26,33,1.637,52,0.428,53,0.017,54,0.024,55,0.017,59,1.121,60,1.26,63,1.637,66,1.428,67,1.26,69,2.375,70,2.375,77,0.513,83,1.428,94,1.26,95,1.917,96,1.917,100,1.509,102,2.438,103,2.375,109,1.454,122,1.637,154,2.375,189,1.509,190,2.375,191,1.428,196,1.917,198,1.829,199,1.917,206,1.121,221,1.917,233,1.002,234,1.917,238,1.428,239,1.917,243,1.121,253,1.637,255,1.637,257,1.637,260,1.917,274,1.637,275,2.342,276,2.342,277,2.342,278,5.644,279,4.388,280,4.659,281,4.859,282,1.917,283,3.999,284,3.398,285,1.917,286,2.342,287,1.917,288,2.342,289,2.342]],["title/dependencies.html",[3,1.504,290,2.454]],["body/dependencies.html",[3,1.333,12,0.042,26,0.86,28,2.177,31,1.898,52,0.444,53,0.022,54,0.03,55,0.022,62,2.177,65,2.177,87,2.177,90,1.898,118,2.177,119,2.549,160,2.549,237,2.177,291,3.115,292,3.115,293,4.657,294,3.115,295,3.115,296,3.115,297,3.115,298,4.144,299,3.115,300,3.115,301,3.115,302,3.115,303,3.115,304,3.115,305,3.115,306,3.115,307,3.115,308,3.115,309,3.115,310,3.115,311,3.115,312,3.115,313,3.115,314,3.115,315,3.115,316,3.115]],["title/miscellaneous/functions.html",[317,1.495,318,2.876]],["body/miscellaneous/functions.html",[6,2.305,12,0.036,53,0.031,54,0.036,55,0.031,71,0.828,285,3.498,317,2.605,318,3.498,319,4.274]],["title/index.html",[71,0.475,320,2.454,321,2.454]],["body/index.html",[12,0.041,19,0.28,41,1.827,53,0.019,54,0.026,55,0.019,118,1.827,274,1.827,322,2.614,323,2.614,324,3.676,325,2.614,326,2.614,327,2.614,328,2.614,329,2.614,330,2.614,331,2.614,332,2.614,333,2.614,334,4.251,335,2.614,336,2.614,337,2.614,338,2.614,339,5.178,340,2.614,341,2.614,342,2.614,343,5.04,344,2.614,345,2.614,346,3.676,347,2.614,348,2.614,349,2.614,350,3.676,351,3.008,352,2.614,353,2.614,354,2.614,355,3.676,356,3.676,357,2.614,358,2.614,359,2.614,360,2.614,361,2.614,362,2.139,363,2.614,364,2.614,365,2.614,366,2.614,367,2.614,368,2.614,369,2.614,370,2.614,371,2.614,372,2.614,373,2.614,374,2.614,375,2.614,376,2.614,377,2.614,378,2.614,379,2.614,380,2.614]],["title/modules.html",[2,1.701]],["body/modules.html",[1,2.379,2,1.671,11,1.869,12,0.034,13,2.101,14,2.101,53,0.028,54,0.034,55,0.028,362,4.419,381,5.399,382,5.399,383,5.399]],["title/overview.html",[384,3.252]],["body/overview.html",[0,0.887,1,3.211,2,1.104,3,1.104,4,1.388,5,1.388,6,1.104,7,1.388,8,1.388,9,2.111,10,2.111,11,2.6,12,0.04,13,2.835,14,2.603,15,1.96,16,1.388,17,1.388,22,1.235,53,0.019,54,0.026,55,0.019,56,2.111,57,2.111,58,2.111,59,2.47,60,2.776,68,1.572,101,1.388,120,0.989,206,2.47,215,2.111,217,2.111,218,2.111,243,2.021,251,2.111,252,2.111,384,2.111,385,4.221,386,2.579,387,2.579]],["title/miscellaneous/variables.html",[317,1.495,388,2.876]],["body/miscellaneous/variables.html",[12,0.039,33,2.826,41,2.098,53,0.022,54,0.029,55,0.022,71,0.581,74,1.285,77,0.658,78,1.262,97,2.098,122,2.098,137,2.461,233,1.285,253,2.098,255,2.826,257,2.826,282,2.458,287,2.458,317,1.83,351,2.458,388,2.458,389,3.003,390,3.003,391,3.003,392,4.572,393,3.003,394,3.003,395,3.003,396,3.003,397,3.003,398,3.003,399,3.003,400,3.003,401,3.003,402,5.596,403,3.003,404,3.003,405,3.003,406,3.003,407,3.003,408,3.003,409,3.003,410,3.003,411,3.003,412,3.003]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"classes/CreateSubscriptionDto.html":{},"classes/CreateUserDto.html":{},"injectables/ExpoNotifierService.html":{},"injectables/FirebaseNotifierService.html":{},"interfaces/IMessage.html":{},"interfaces/IMessage-1.html":{},"interfaces/IMessageData.html":{},"controllers/IssController.html":{},"modules/IssModule.html":{},"injectables/IssService.html":{},"classes/MessageDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":278,"title":{},"body":{"coverage.html":{}}}],["0.1.13",{"_index":309,"title":{},"body":{"dependencies.html":{}}}],["0.12.0",{"_index":302,"title":{},"body":{"dependencies.html":{}}}],["0.2.3",{"_index":301,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":294,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":281,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":284,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":280,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":279,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":192,"title":{"interfaces/IMessage-1.html":{}},"body":{}}],["17.1.1",{"_index":292,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":386,"title":{},"body":{"overview.html":{}}}],["3",{"_index":387,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":311,"title":{},"body":{"dependencies.html":{}}}],["3.4.0",{"_index":304,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":385,"title":{},"body":{"overview.html":{}}}],["4.1.4",{"_index":316,"title":{},"body":{"dependencies.html":{}}}],["4.5.1",{"_index":300,"title":{},"body":{"dependencies.html":{}}}],["5.9.7",{"_index":306,"title":{},"body":{"dependencies.html":{}}}],["6.4.0",{"_index":296,"title":{},"body":{"dependencies.html":{}}}],["6.5.4",{"_index":313,"title":{},"body":{"dependencies.html":{}}}],["7.0.0",{"_index":293,"title":{},"body":{"dependencies.html":{}}}],["8.10.0",{"_index":305,"title":{},"body":{"dependencies.html":{}}}],["admin",{"_index":160,"title":{},"body":{"injectables/FirebaseNotifierService.html":{},"dependencies.html":{}}}],["admin.credential.cert(this.sdkcredentials",{"_index":185,"title":{},"body":{"injectables/FirebaseNotifierService.html":{}}}],["admin.initializeapp",{"_index":183,"title":{},"body":{"injectables/FirebaseNotifierService.html":{}}}],["admin.messaging().send(payload",{"_index":188,"title":{},"body":{"injectables/FirebaseNotifierService.html":{}}}],["amazing",{"_index":363,"title":{},"body":{"index.html":{}}}],["angular",{"_index":332,"title":{},"body":{"index.html":{}}}],["app",{"_index":341,"title":{},"body":{"index.html":{}}}],["applications",{"_index":329,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["async",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"injectables/ExpoNotifierService.html":{},"injectables/FirebaseNotifierService.html":{},"controllers/IssController.html":{},"injectables/IssService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["auth_provider_x509_cert_url",{"_index":179,"title":{},"body":{"injectables/FirebaseNotifierService.html":{}}}],["auth_uri",{"_index":175,"title":{},"body":{"injectables/FirebaseNotifierService.html":{}}}],["author",{"_index":373,"title":{},"body":{"index.html":{}}}],["await",{"_index":142,"title":{},"body":{"injectables/ExpoNotifierService.html":{},"injectables/FirebaseNotifierService.html":{},"controllers/IssController.html":{},"controllers/UserController.html":{}}}],["backers",{"_index":364,"title":{},"body":{"index.html":{}}}],["body",{"_index":91,"title":{},"body":{"classes/CreateSubscriptionDto.html":{},"injectables/ExpoNotifierService.html":{},"interfaces/IMessage.html":{},"controllers/IssController.html":{},"classes/MessageDto.html":{},"controllers/UserController.html":{}}}],["bootstrap",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/IssModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":383,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":381,"title":{},"body":{"modules.html":{}}}],["building",{"_index":325,"title":{},"body":{"index.html":{}}}],["catch",{"_index":144,"title":{},"body":{"injectables/ExpoNotifierService.html":{},"injectables/FirebaseNotifierService.html":{},"controllers/UserController.html":{}}}],["class",{"_index":52,"title":{"classes/CreateSubscriptionDto.html":{},"classes/CreateUserDto.html":{},"classes/MessageDto.html":{}},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"classes/CreateSubscriptionDto.html":{},"classes/CreateUserDto.html":{},"injectables/ExpoNotifierService.html":{},"injectables/FirebaseNotifierService.html":{},"controllers/IssController.html":{},"modules/IssModule.html":{},"injectables/IssService.html":{},"classes/MessageDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":68,"title":{},"body":{"classes/CreateSubscriptionDto.html":{},"classes/CreateUserDto.html":{},"classes/MessageDto.html":{},"overview.html":{}}}],["client_email",{"_index":171,"title":{},"body":{"injectables/FirebaseNotifierService.html":{}}}],["client_id",{"_index":173,"title":{},"body":{"injectables/FirebaseNotifierService.html":{}}}],["client_x509_cert_url",{"_index":181,"title":{},"body":{"injectables/FirebaseNotifierService.html":{}}}],["cluster_appmodule",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_commonmodule",{"_index":56,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_commonmodule_exports",{"_index":57,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_commonmodule_providers",{"_index":58,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_issmodule",{"_index":215,"title":{},"body":{"modules/IssModule.html":{},"overview.html":{}}}],["cluster_issmodule_exports",{"_index":217,"title":{},"body":{"modules/IssModule.html":{},"overview.html":{}}}],["cluster_issmodule_imports",{"_index":216,"title":{},"body":{"modules/IssModule.html":{}}}],["cluster_issmodule_providers",{"_index":218,"title":{},"body":{"modules/IssModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":251,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":252,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["common/common.module",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"modules/IssModule.html":{}}}],["common/expo",{"_index":229,"title":{},"body":{"injectables/IssService.html":{}}}],["commonmodule",{"_index":11,"title":{"modules/CommonModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/IssModule.html":{},"modules.html":{},"overview.html":{}}}],["config",{"_index":34,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":29,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":38,"title":{},"body":{"modules/AppModule.html":{}}}],["configschema",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configservice",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"injectables/FirebaseNotifierService.html":{}}}],["configservice.get('mongodb_uri",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log('deviceid",{"_index":213,"title":{},"body":{"controllers/IssController.html":{}}}],["console.log('error",{"_index":148,"title":{},"body":{"injectables/ExpoNotifierService.html":{},"injectables/FirebaseNotifierService.html":{}}}],["console.log('successfully",{"_index":150,"title":{},"body":{"injectables/ExpoNotifierService.html":{},"injectables/FirebaseNotifierService.html":{}}}],["console.log('token",{"_index":212,"title":{},"body":{"controllers/IssController.html":{}}}],["console.log('usercontroller.createuser",{"_index":248,"title":{},"body":{"controllers/UserController.html":{}}}],["const",{"_index":126,"title":{},"body":{"injectables/ExpoNotifierService.html":{},"injectables/FirebaseNotifierService.html":{},"controllers/IssController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["construct",{"_index":131,"title":{},"body":{"injectables/ExpoNotifierService.html":{}}}],["constructor",{"_index":106,"title":{},"body":{"injectables/ExpoNotifierService.html":{},"injectables/FirebaseNotifierService.html":{},"injectables/IssService.html":{},"injectables/UserService.html":{}}}],["constructor(@injectmodel('user",{"_index":270,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(configservice",{"_index":157,"title":{},"body":{"injectables/FirebaseNotifierService.html":{}}}],["constructor(notifierservice",{"_index":224,"title":{},"body":{"injectables/IssService.html":{}}}],["constructor(private",{"_index":161,"title":{},"body":{"injectables/FirebaseNotifierService.html":{}}}],["constructor(public",{"_index":210,"title":{},"body":{"controllers/IssController.html":{},"injectables/IssService.html":{},"controllers/UserController.html":{}}}],["constructor(usermodel",{"_index":262,"title":{},"body":{"injectables/UserService.html":{}}}],["controller",{"_index":198,"title":{"controllers/IssController.html":{},"controllers/UserController.html":{}},"body":{"controllers/IssController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('iss",{"_index":209,"title":{},"body":{"controllers/IssController.html":{}}}],["controller('user",{"_index":245,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"controllers/IssController.html":{},"modules/IssModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["coverage",{"_index":274,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":261,"title":{},"body":{"injectables/UserService.html":{}}}],["create(createuserpayload",{"_index":266,"title":{},"body":{"injectables/UserService.html":{}}}],["createsubscription",{"_index":202,"title":{},"body":{"controllers/IssController.html":{},"injectables/IssService.html":{}}}],["createsubscription(@body",{"_index":211,"title":{},"body":{"controllers/IssController.html":{}}}],["createsubscription(createsubscriptiondto",{"_index":203,"title":{},"body":{"controllers/IssController.html":{}}}],["createsubscription(token",{"_index":226,"title":{},"body":{"injectables/IssService.html":{}}}],["createsubscriptiondto",{"_index":67,"title":{"classes/CreateSubscriptionDto.html":{}},"body":{"classes/CreateSubscriptionDto.html":{},"controllers/IssController.html":{},"classes/MessageDto.html":{},"coverage.html":{}}}],["createuser",{"_index":240,"title":{},"body":{"controllers/UserController.html":{}}}],["createuser(@body",{"_index":246,"title":{},"body":{"controllers/UserController.html":{}}}],["createuser(createuserdto",{"_index":241,"title":{},"body":{"controllers/UserController.html":{}}}],["createuserdto",{"_index":94,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["createuserpayload",{"_index":268,"title":{},"body":{"injectables/UserService.html":{}}}],["credential",{"_index":184,"title":{},"body":{"injectables/FirebaseNotifierService.html":{}}}],["data",{"_index":92,"title":{},"body":{"classes/CreateSubscriptionDto.html":{},"injectables/ExpoNotifierService.html":{},"injectables/FirebaseNotifierService.html":{},"interfaces/IMessage.html":{},"classes/MessageDto.html":{}}}],["declarations",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/IssModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorators",{"_index":79,"title":{},"body":{"classes/CreateSubscriptionDto.html":{},"classes/CreateUserDto.html":{},"controllers/IssController.html":{},"classes/MessageDto.html":{},"controllers/UserController.html":{}}}],["default",{"_index":137,"title":{},"body":{"injectables/ExpoNotifierService.html":{},"interfaces/IMessage.html":{},"interfaces/IMessage-1.html":{},"interfaces/IMessageData.html":{},"miscellaneous/variables.html":{}}}],["default('development",{"_index":398,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":81,"title":{},"body":{"classes/CreateSubscriptionDto.html":{},"classes/CreateUserDto.html":{},"injectables/ExpoNotifierService.html":{},"injectables/FirebaseNotifierService.html":{},"interfaces/IMessage-1.html":{},"interfaces/IMessageData.html":{},"controllers/IssController.html":{},"injectables/IssService.html":{},"classes/MessageDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/IssModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":333,"title":{},"body":{"index.html":{}}}],["development",{"_index":342,"title":{},"body":{"index.html":{}}}],["deviceid",{"_index":74,"title":{},"body":{"classes/CreateSubscriptionDto.html":{},"classes/CreateUserDto.html":{},"controllers/IssController.html":{},"classes/MessageDto.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["document",{"_index":236,"title":{},"body":{"interfaces/User.html":{}}}],["documentation",{"_index":275,"title":{},"body":{"coverage.html":{}}}],["dto",{"_index":208,"title":{},"body":{"controllers/IssController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["e2e",{"_index":352,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":326,"title":{},"body":{"index.html":{}}}],["error",{"_index":145,"title":{},"body":{"injectables/ExpoNotifierService.html":{},"injectables/FirebaseNotifierService.html":{},"controllers/UserController.html":{}}}],["error(message",{"_index":130,"title":{},"body":{"injectables/ExpoNotifierService.html":{}}}],["expo",{"_index":65,"title":{},"body":{"modules/CommonModule.html":{},"injectables/ExpoNotifierService.html":{},"dependencies.html":{}}}],["expo.isexpopushtoken(token",{"_index":125,"title":{},"body":{"injectables/ExpoNotifierService.html":{}}}],["exponotifierservice",{"_index":59,"title":{"injectables/ExpoNotifierService.html":{}},"body":{"modules/CommonModule.html":{},"injectables/ExpoNotifierService.html":{},"injectables/IssService.html":{},"coverage.html":{},"overview.html":{}}}],["expopushmessage",{"_index":116,"title":{},"body":{"injectables/ExpoNotifierService.html":{}}}],["expopushticket",{"_index":117,"title":{},"body":{"injectables/ExpoNotifierService.html":{}}}],["export",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"classes/CreateSubscriptionDto.html":{},"classes/CreateUserDto.html":{},"injectables/ExpoNotifierService.html":{},"injectables/FirebaseNotifierService.html":{},"interfaces/IMessage.html":{},"interfaces/IMessage-1.html":{},"interfaces/IMessageData.html":{},"controllers/IssController.html":{},"modules/IssModule.html":{},"injectables/IssService.html":{},"classes/MessageDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":8,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/IssModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":298,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":235,"title":{},"body":{"interfaces/User.html":{}}}],["feature",{"_index":257,"title":{},"body":{"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"classes/CreateSubscriptionDto.html":{},"classes/CreateUserDto.html":{},"injectables/ExpoNotifierService.html":{},"injectables/FirebaseNotifierService.html":{},"interfaces/IMessage.html":{},"interfaces/IMessage-1.html":{},"interfaces/IMessageData.html":{},"controllers/IssController.html":{},"modules/IssModule.html":{},"injectables/IssService.html":{},"classes/MessageDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["firebase",{"_index":62,"title":{},"body":{"modules/CommonModule.html":{},"injectables/FirebaseNotifierService.html":{},"dependencies.html":{}}}],["firebase_auth_provider_x509_cert_url",{"_index":410,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firebase_auth_uri",{"_index":408,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firebase_client_email",{"_index":406,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firebase_client_id",{"_index":407,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firebase_client_x509_cert_url",{"_index":411,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firebase_private_key",{"_index":405,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firebase_private_key_id",{"_index":404,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firebase_project_id",{"_index":403,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firebase_token_uri",{"_index":409,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firebase_type",{"_index":401,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firebasenotifierservice",{"_index":60,"title":{"injectables/FirebaseNotifierService.html":{}},"body":{"modules/CommonModule.html":{},"injectables/FirebaseNotifierService.html":{},"coverage.html":{},"overview.html":{}}}],["framework",{"_index":324,"title":{},"body":{"index.html":{}}}],["function",{"_index":286,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":318,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["getting",{"_index":320,"title":{"index.html":{}},"body":{}}],["grow",{"_index":359,"title":{},"body":{"index.html":{}}}],["hapi/joi",{"_index":291,"title":{},"body":{"dependencies.html":{}}}],["heavily",{"_index":330,"title":{},"body":{"index.html":{}}}],["here",{"_index":370,"title":{},"body":{"index.html":{}}}],["https://docs.expo.io/versions/latest/guides/push",{"_index":133,"title":{},"body":{"injectables/ExpoNotifierService.html":{}}}],["https://firebase.google.com/docs/cloud",{"_index":186,"title":{},"body":{"injectables/FirebaseNotifierService.html":{}}}],["https://github.com/expo/expo",{"_index":123,"title":{},"body":{"injectables/ExpoNotifierService.html":{}}}],["https://nestjs.com",{"_index":377,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":276,"title":{},"body":{"coverage.html":{}}}],["ignoreenvfile",{"_index":39,"title":{},"body":{"modules/AppModule.html":{}}}],["imessage",{"_index":109,"title":{"interfaces/IMessage.html":{},"interfaces/IMessage-1.html":{}},"body":{"injectables/ExpoNotifierService.html":{},"injectables/FirebaseNotifierService.html":{},"interfaces/IMessage.html":{},"interfaces/IMessage-1.html":{},"coverage.html":{}}}],["imessagedata",{"_index":191,"title":{"interfaces/IMessageData.html":{}},"body":{"interfaces/IMessage.html":{},"interfaces/IMessageData.html":{},"coverage.html":{}}}],["import",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"classes/CreateSubscriptionDto.html":{},"classes/CreateUserDto.html":{},"injectables/ExpoNotifierService.html":{},"injectables/FirebaseNotifierService.html":{},"interfaces/IMessage.html":{},"controllers/IssController.html":{},"modules/IssModule.html":{},"injectables/IssService.html":{},"classes/MessageDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"modules/IssModule.html":{},"modules/UserModule.html":{}}}],["index",{"_index":71,"title":{"index.html":{}},"body":{"classes/CreateSubscriptionDto.html":{},"classes/CreateUserDto.html":{},"injectables/ExpoNotifierService.html":{},"injectables/FirebaseNotifierService.html":{},"interfaces/IMessage.html":{},"controllers/IssController.html":{},"injectables/IssService.html":{},"classes/MessageDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":193,"title":{},"body":{"interfaces/IMessage-1.html":{},"interfaces/IMessageData.html":{}}}],["info",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"classes/CreateSubscriptionDto.html":{},"classes/CreateUserDto.html":{},"injectables/ExpoNotifierService.html":{},"injectables/FirebaseNotifierService.html":{},"interfaces/IMessage.html":{},"interfaces/IMessage-1.html":{},"interfaces/IMessageData.html":{},"controllers/IssController.html":{},"modules/IssModule.html":{},"injectables/IssService.html":{},"classes/MessageDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["inject",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["injectable",{"_index":100,"title":{"injectables/ExpoNotifierService.html":{},"injectables/FirebaseNotifierService.html":{},"injectables/IssService.html":{},"injectables/UserService.html":{}},"body":{"injectables/ExpoNotifierService.html":{},"injectables/FirebaseNotifierService.html":{},"injectables/IssService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":101,"title":{},"body":{"injectables/ExpoNotifierService.html":{},"injectables/FirebaseNotifierService.html":{},"injectables/IssService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectmodel",{"_index":269,"title":{},"body":{"injectables/UserService.html":{}}}],["inspired",{"_index":331,"title":{},"body":{"index.html":{}}}],["installation",{"_index":338,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":340,"title":{},"body":{"index.html":{}}}],["interface",{"_index":189,"title":{"interfaces/IMessage.html":{},"interfaces/IMessage-1.html":{},"interfaces/IMessageData.html":{},"interfaces/User.html":{}},"body":{"interfaces/IMessage.html":{},"interfaces/IMessage-1.html":{},"interfaces/IMessageData.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":120,"title":{},"body":{"injectables/ExpoNotifierService.html":{},"injectables/FirebaseNotifierService.html":{},"interfaces/IMessage.html":{},"interfaces/IMessage-1.html":{},"interfaces/IMessageData.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["isglobal",{"_index":42,"title":{},"body":{"modules/AppModule.html":{}}}],["isobject",{"_index":88,"title":{},"body":{"classes/CreateSubscriptionDto.html":{},"classes/MessageDto.html":{}}}],["iss",{"_index":201,"title":{},"body":{"controllers/IssController.html":{}}}],["iss.controller",{"_index":220,"title":{},"body":{"modules/IssModule.html":{}}}],["iss.service",{"_index":207,"title":{},"body":{"controllers/IssController.html":{},"modules/IssModule.html":{}}}],["iss/iss.controller",{"_index":35,"title":{},"body":{"modules/AppModule.html":{}}}],["iss/iss.module",{"_index":36,"title":{},"body":{"modules/AppModule.html":{}}}],["isscontroller",{"_index":23,"title":{"controllers/IssController.html":{}},"body":{"modules/AppModule.html":{},"controllers/IssController.html":{},"modules/IssModule.html":{},"coverage.html":{}}}],["issmodule",{"_index":13,"title":{"modules/IssModule.html":{}},"body":{"modules/AppModule.html":{},"modules/IssModule.html":{},"modules.html":{},"overview.html":{}}}],["issservice",{"_index":206,"title":{"injectables/IssService.html":{}},"body":{"controllers/IssController.html":{},"modules/IssModule.html":{},"injectables/IssService.html":{},"coverage.html":{},"overview.html":{}}}],["isstring",{"_index":80,"title":{},"body":{"classes/CreateSubscriptionDto.html":{},"classes/CreateUserDto.html":{},"classes/MessageDto.html":{}}}],["joi.number().default(3000",{"_index":400,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.object",{"_index":393,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string",{"_index":395,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().required",{"_index":402,"title":{},"body":{"miscellaneous/variables.html":{}}}],["join",{"_index":366,"title":{},"body":{"index.html":{}}}],["json.stringify(response",{"_index":153,"title":{},"body":{"injectables/ExpoNotifierService.html":{}}}],["kamil",{"_index":374,"title":{},"body":{"index.html":{}}}],["key",{"_index":194,"title":{},"body":{"interfaces/IMessage-1.html":{},"interfaces/IMessageData.html":{}}}],["legend",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/IssModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["license",{"_index":380,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":356,"title":{},"body":{"index.html":{}}}],["logger",{"_index":147,"title":{},"body":{"injectables/ExpoNotifierService.html":{},"injectables/FirebaseNotifierService.html":{}}}],["matching",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"classes/CreateSubscriptionDto.html":{},"classes/CreateUserDto.html":{},"injectables/ExpoNotifierService.html":{},"injectables/FirebaseNotifierService.html":{},"interfaces/IMessage.html":{},"interfaces/IMessage-1.html":{},"interfaces/IMessageData.html":{},"controllers/IssController.html":{},"modules/IssModule.html":{},"injectables/IssService.html":{},"classes/MessageDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":75,"title":{},"body":{"classes/CreateSubscriptionDto.html":{},"injectables/ExpoNotifierService.html":{},"injectables/FirebaseNotifierService.html":{},"controllers/IssController.html":{},"injectables/IssService.html":{},"classes/MessageDto.html":{}}}],["message.body",{"_index":138,"title":{},"body":{"injectables/ExpoNotifierService.html":{}}}],["message.data",{"_index":139,"title":{},"body":{"injectables/ExpoNotifierService.html":{}}}],["messagedto",{"_index":83,"title":{"classes/MessageDto.html":{}},"body":{"classes/CreateSubscriptionDto.html":{},"classes/MessageDto.html":{},"coverage.html":{}}}],["messaging/send",{"_index":187,"title":{},"body":{"injectables/FirebaseNotifierService.html":{}}}],["metadata",{"_index":308,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":104,"title":{},"body":{"injectables/ExpoNotifierService.html":{},"injectables/FirebaseNotifierService.html":{},"controllers/IssController.html":{},"injectables/IssService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["miscellaneous",{"_index":317,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":355,"title":{},"body":{"index.html":{}}}],["mode",{"_index":346,"title":{},"body":{"index.html":{}}}],["model",{"_index":263,"title":{},"body":{"injectables/UserService.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/IssModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/IssModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/IssModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["mongoose",{"_index":237,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["mongoose.schema",{"_index":412,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoosemodule",{"_index":30,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{}}}],["mongoosemodule.forfeature",{"_index":258,"title":{},"body":{"modules/UserModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":369,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":375,"title":{},"body":{"index.html":{}}}],["n",{"_index":170,"title":{},"body":{"injectables/FirebaseNotifierService.html":{}}}],["name",{"_index":112,"title":{},"body":{"injectables/ExpoNotifierService.html":{},"injectables/FirebaseNotifierService.html":{},"controllers/IssController.html":{},"injectables/IssService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["nest",{"_index":334,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":379,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"injectables/ExpoNotifierService.html":{},"injectables/FirebaseNotifierService.html":{},"controllers/IssController.html":{},"modules/IssModule.html":{},"injectables/IssService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"injectables/FirebaseNotifierService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":295,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mongoose",{"_index":31,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":297,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":299,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":122,"title":{},"body":{"injectables/ExpoNotifierService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["node",{"_index":124,"title":{},"body":{"injectables/ExpoNotifierService.html":{}}}],["node.js",{"_index":323,"title":{},"body":{"index.html":{}}}],["node_env",{"_index":394,"title":{},"body":{"miscellaneous/variables.html":{}}}],["notifications",{"_index":134,"title":{},"body":{"injectables/ExpoNotifierService.html":{}}}],["notifier.service",{"_index":64,"title":{},"body":{"modules/CommonModule.html":{},"injectables/IssService.html":{}}}],["notifier.service.ts",{"_index":103,"title":{},"body":{"injectables/ExpoNotifierService.html":{},"injectables/FirebaseNotifierService.html":{},"coverage.html":{}}}],["notifier.service.ts:10",{"_index":158,"title":{},"body":{"injectables/FirebaseNotifierService.html":{}}}],["notifier.service.ts:15",{"_index":110,"title":{},"body":{"injectables/ExpoNotifierService.html":{}}}],["notifier.service.ts:32",{"_index":159,"title":{},"body":{"injectables/FirebaseNotifierService.html":{}}}],["notifier.service.ts:8",{"_index":107,"title":{},"body":{"injectables/ExpoNotifierService.html":{}}}],["notifier/expo",{"_index":66,"title":{},"body":{"modules/CommonModule.html":{},"injectables/ExpoNotifierService.html":{},"injectables/IssService.html":{},"coverage.html":{}}}],["notifier/firebase",{"_index":63,"title":{},"body":{"modules/CommonModule.html":{},"injectables/FirebaseNotifierService.html":{},"coverage.html":{}}}],["notifier/interfaces/imessage.ts",{"_index":190,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IMessage-1.html":{},"coverage.html":{}}}],["notifier/interfaces/imessage.ts:1",{"_index":195,"title":{},"body":{"interfaces/IMessage-1.html":{}}}],["notifier/interfaces/imessagedata.ts",{"_index":196,"title":{},"body":{"interfaces/IMessageData.html":{},"coverage.html":{}}}],["notifier/interfaces/imessagedata.ts:1",{"_index":197,"title":{},"body":{"interfaces/IMessageData.html":{}}}],["notifierservice",{"_index":223,"title":{},"body":{"injectables/IssService.html":{}}}],["npm",{"_index":339,"title":{},"body":{"index.html":{}}}],["object",{"_index":93,"title":{},"body":{"classes/CreateSubscriptionDto.html":{},"classes/MessageDto.html":{}}}],["occured",{"_index":250,"title":{},"body":{"controllers/UserController.html":{}}}],["open",{"_index":357,"title":{},"body":{"index.html":{}}}],["optional",{"_index":113,"title":{},"body":{"injectables/ExpoNotifierService.html":{},"injectables/FirebaseNotifierService.html":{},"controllers/IssController.html":{},"injectables/IssService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["out",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/IssModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":384,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":290,"title":{"dependencies.html":{}},"body":{}}],["parameters",{"_index":111,"title":{},"body":{"injectables/ExpoNotifierService.html":{},"injectables/FirebaseNotifierService.html":{},"controllers/IssController.html":{},"injectables/IssService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["payload",{"_index":135,"title":{},"body":{"injectables/ExpoNotifierService.html":{},"injectables/FirebaseNotifierService.html":{},"injectables/UserService.html":{}}}],["please",{"_index":367,"title":{},"body":{"index.html":{}}}],["port",{"_index":399,"title":{},"body":{"miscellaneous/variables.html":{}}}],["post",{"_index":204,"title":{},"body":{"controllers/IssController.html":{},"controllers/UserController.html":{}}}],["prefix",{"_index":200,"title":{},"body":{"controllers/IssController.html":{},"controllers/UserController.html":{}}}],["private",{"_index":155,"title":{},"body":{"injectables/FirebaseNotifierService.html":{},"injectables/UserService.html":{}}}],["private_key",{"_index":168,"title":{},"body":{"injectables/FirebaseNotifierService.html":{}}}],["private_key_id",{"_index":166,"title":{},"body":{"injectables/FirebaseNotifierService.html":{}}}],["process.env.node_env",{"_index":40,"title":{},"body":{"modules/AppModule.html":{}}}],["production",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["progressive",{"_index":322,"title":{},"body":{"index.html":{}}}],["project",{"_index":358,"title":{},"body":{"index.html":{}}}],["project_id",{"_index":164,"title":{},"body":{"injectables/FirebaseNotifierService.html":{}}}],["promise",{"_index":115,"title":{},"body":{"injectables/ExpoNotifierService.html":{},"controllers/IssController.html":{},"controllers/UserController.html":{}}}],["properties",{"_index":72,"title":{},"body":{"classes/CreateSubscriptionDto.html":{},"classes/CreateUserDto.html":{},"injectables/ExpoNotifierService.html":{},"injectables/FirebaseNotifierService.html":{},"interfaces/IMessage.html":{},"injectables/IssService.html":{},"classes/MessageDto.html":{},"interfaces/User.html":{}}}],["providers",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/IssModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["provision",{"_index":397,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":222,"title":{},"body":{"injectables/IssService.html":{}}}],["push",{"_index":127,"title":{},"body":{"injectables/ExpoNotifierService.html":{}}}],["pushtoken",{"_index":97,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["rc.0",{"_index":303,"title":{},"body":{"dependencies.html":{}}}],["read",{"_index":368,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":73,"title":{},"body":{"classes/CreateSubscriptionDto.html":{},"classes/CreateUserDto.html":{},"classes/MessageDto.html":{}}}],["reflect",{"_index":307,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":337,"title":{},"body":{"index.html":{}}}],["reset",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/IssModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["response",{"_index":140,"title":{},"body":{"injectables/ExpoNotifierService.html":{},"injectables/FirebaseNotifierService.html":{},"controllers/IssController.html":{}}}],["result",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"classes/CreateSubscriptionDto.html":{},"classes/CreateUserDto.html":{},"injectables/ExpoNotifierService.html":{},"injectables/FirebaseNotifierService.html":{},"interfaces/IMessage.html":{},"interfaces/IMessage-1.html":{},"interfaces/IMessageData.html":{},"controllers/IssController.html":{},"modules/IssModule.html":{},"injectables/IssService.html":{},"classes/MessageDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"classes/CreateSubscriptionDto.html":{},"classes/CreateUserDto.html":{},"injectables/ExpoNotifierService.html":{},"injectables/FirebaseNotifierService.html":{},"interfaces/IMessage.html":{},"interfaces/IMessage-1.html":{},"interfaces/IMessageData.html":{},"controllers/IssController.html":{},"modules/IssModule.html":{},"injectables/IssService.html":{},"classes/MessageDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":152,"title":{},"body":{"injectables/ExpoNotifierService.html":{},"injectables/FirebaseNotifierService.html":{},"controllers/IssController.html":{},"injectables/IssService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":114,"title":{},"body":{"injectables/ExpoNotifierService.html":{},"injectables/FirebaseNotifierService.html":{},"controllers/IssController.html":{},"injectables/IssService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["rimraf",{"_index":310,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":343,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":312,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":327,"title":{},"body":{"index.html":{}}}],["schema",{"_index":259,"title":{},"body":{"modules/UserModule.html":{}}}],["schemas",{"_index":256,"title":{},"body":{"modules/UserModule.html":{}}}],["sdk",{"_index":119,"title":{},"body":{"injectables/ExpoNotifierService.html":{},"dependencies.html":{}}}],["sdkcredentials",{"_index":156,"title":{},"body":{"injectables/FirebaseNotifierService.html":{}}}],["see",{"_index":132,"title":{},"body":{"injectables/ExpoNotifierService.html":{}}}],["send",{"_index":105,"title":{},"body":{"injectables/ExpoNotifierService.html":{},"injectables/FirebaseNotifierService.html":{}}}],["send(token",{"_index":108,"title":{},"body":{"injectables/ExpoNotifierService.html":{},"injectables/FirebaseNotifierService.html":{}}}],["sending",{"_index":149,"title":{},"body":{"injectables/ExpoNotifierService.html":{},"injectables/FirebaseNotifierService.html":{}}}],["sent",{"_index":151,"title":{},"body":{"injectables/ExpoNotifierService.html":{},"injectables/FirebaseNotifierService.html":{}}}],["server",{"_index":118,"title":{},"body":{"injectables/ExpoNotifierService.html":{},"dependencies.html":{},"index.html":{}}}],["setdefaultsoninsert",{"_index":273,"title":{},"body":{"injectables/UserService.html":{}}}],["side",{"_index":328,"title":{},"body":{"index.html":{}}}],["sound",{"_index":136,"title":{},"body":{"injectables/ExpoNotifierService.html":{}}}],["source",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"classes/CreateSubscriptionDto.html":{},"classes/CreateUserDto.html":{},"injectables/ExpoNotifierService.html":{},"injectables/FirebaseNotifierService.html":{},"interfaces/IMessage.html":{},"interfaces/IMessage-1.html":{},"interfaces/IMessageData.html":{},"controllers/IssController.html":{},"modules/IssModule.html":{},"injectables/IssService.html":{},"classes/MessageDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"index.html":{}}}],["sponsors",{"_index":361,"title":{},"body":{"index.html":{}}}],["src/.../config.schema.ts",{"_index":389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":319,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../user.module.ts",{"_index":390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.schema.ts",{"_index":391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":21,"title":{},"body":{"modules/AppModule.html":{}}}],["src/common/common.module.ts",{"_index":61,"title":{},"body":{"modules/CommonModule.html":{}}}],["src/common/expo",{"_index":102,"title":{},"body":{"injectables/ExpoNotifierService.html":{},"interfaces/IMessage.html":{},"interfaces/IMessageData.html":{},"coverage.html":{}}}],["src/common/firebase",{"_index":154,"title":{},"body":{"injectables/FirebaseNotifierService.html":{},"interfaces/IMessage-1.html":{},"coverage.html":{}}}],["src/config/config.schema.ts",{"_index":282,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/iss/dto/create",{"_index":69,"title":{},"body":{"classes/CreateSubscriptionDto.html":{},"classes/MessageDto.html":{},"coverage.html":{}}}],["src/iss/iss.controller.ts",{"_index":199,"title":{},"body":{"controllers/IssController.html":{},"coverage.html":{}}}],["src/iss/iss.controller.ts:11",{"_index":205,"title":{},"body":{"controllers/IssController.html":{}}}],["src/iss/iss.module.ts",{"_index":219,"title":{},"body":{"modules/IssModule.html":{}}}],["src/iss/iss.service.ts",{"_index":221,"title":{},"body":{"injectables/IssService.html":{},"coverage.html":{}}}],["src/iss/iss.service.ts:5",{"_index":225,"title":{},"body":{"injectables/IssService.html":{}}}],["src/iss/iss.service.ts:6",{"_index":228,"title":{},"body":{"injectables/IssService.html":{}}}],["src/iss/iss.service.ts:8",{"_index":227,"title":{},"body":{"injectables/IssService.html":{}}}],["src/main.ts",{"_index":285,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/user/dto/create",{"_index":95,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/user/interfaces/user.interface.ts",{"_index":234,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/user/schemas/user.schema.ts",{"_index":287,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/user/user.controller.ts",{"_index":239,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:10",{"_index":242,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.module.ts",{"_index":253,"title":{},"body":{"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/user/user.service.ts",{"_index":260,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:10",{"_index":264,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:13",{"_index":267,"title":{},"body":{"injectables/UserService.html":{}}}],["start",{"_index":344,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":347,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":348,"title":{},"body":{"index.html":{}}}],["started",{"_index":321,"title":{"index.html":{}},"body":{}}],["starter",{"_index":336,"title":{},"body":{"index.html":{}}}],["statements",{"_index":277,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":371,"title":{},"body":{"index.html":{}}}],["string",{"_index":78,"title":{},"body":{"classes/CreateSubscriptionDto.html":{},"classes/CreateUserDto.html":{},"injectables/ExpoNotifierService.html":{},"injectables/FirebaseNotifierService.html":{},"interfaces/IMessage.html":{},"interfaces/IMessage-1.html":{},"interfaces/IMessageData.html":{},"controllers/IssController.html":{},"classes/MessageDto.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["subscription.dto.ts",{"_index":70,"title":{},"body":{"classes/CreateSubscriptionDto.html":{},"classes/MessageDto.html":{},"coverage.html":{}}}],["subscription.dto.ts:14",{"_index":86,"title":{},"body":{"classes/CreateSubscriptionDto.html":{}}}],["subscription.dto.ts:17",{"_index":82,"title":{},"body":{"classes/CreateSubscriptionDto.html":{}}}],["subscription.dto.ts:21",{"_index":85,"title":{},"body":{"classes/CreateSubscriptionDto.html":{}}}],["subscription.dto.ts:6",{"_index":231,"title":{},"body":{"classes/MessageDto.html":{}}}],["subscription.dto.ts:9",{"_index":232,"title":{},"body":{"classes/MessageDto.html":{}}}],["support",{"_index":362,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":382,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":314,"title":{},"body":{"dependencies.html":{}}}],["table",{"_index":289,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":288,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":351,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["test:covsupport",{"_index":354,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":353,"title":{},"body":{"index.html":{}}}],["tests",{"_index":350,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":360,"title":{},"body":{"index.html":{}}}],["this.configservice.get('firebase_auth_provider_x509_cert_url",{"_index":180,"title":{},"body":{"injectables/FirebaseNotifierService.html":{}}}],["this.configservice.get('firebase_auth_uri",{"_index":176,"title":{},"body":{"injectables/FirebaseNotifierService.html":{}}}],["this.configservice.get('firebase_client_email",{"_index":172,"title":{},"body":{"injectables/FirebaseNotifierService.html":{}}}],["this.configservice.get('firebase_client_id",{"_index":174,"title":{},"body":{"injectables/FirebaseNotifierService.html":{}}}],["this.configservice.get('firebase_client_x509_cert_url",{"_index":182,"title":{},"body":{"injectables/FirebaseNotifierService.html":{}}}],["this.configservice.get('firebase_private_key').replace(/\\\\n/g",{"_index":169,"title":{},"body":{"injectables/FirebaseNotifierService.html":{}}}],["this.configservice.get('firebase_private_key_id",{"_index":167,"title":{},"body":{"injectables/FirebaseNotifierService.html":{}}}],["this.configservice.get('firebase_project_id",{"_index":165,"title":{},"body":{"injectables/FirebaseNotifierService.html":{}}}],["this.configservice.get('firebase_token_uri",{"_index":178,"title":{},"body":{"injectables/FirebaseNotifierService.html":{}}}],["this.configservice.get('firebase_type",{"_index":163,"title":{},"body":{"injectables/FirebaseNotifierService.html":{}}}],["this.expo",{"_index":121,"title":{},"body":{"injectables/ExpoNotifierService.html":{}}}],["this.expo.sendpushnotificationsasync(payload",{"_index":143,"title":{},"body":{"injectables/ExpoNotifierService.html":{}}}],["this.issservice.createsubscription(token",{"_index":214,"title":{},"body":{"controllers/IssController.html":{}}}],["this.notifierservice.send(token",{"_index":230,"title":{},"body":{"injectables/IssService.html":{}}}],["this.sdkcredentials",{"_index":162,"title":{},"body":{"injectables/FirebaseNotifierService.html":{}}}],["this.usermodel.updateone",{"_index":271,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.create(createuserdto",{"_index":247,"title":{},"body":{"controllers/UserController.html":{}}}],["throw",{"_index":129,"title":{},"body":{"injectables/ExpoNotifierService.html":{},"injectables/FirebaseNotifierService.html":{},"controllers/UserController.html":{}}}],["todo",{"_index":146,"title":{},"body":{"injectables/ExpoNotifierService.html":{},"injectables/FirebaseNotifierService.html":{}}}],["token",{"_index":76,"title":{},"body":{"classes/CreateSubscriptionDto.html":{},"injectables/ExpoNotifierService.html":{},"injectables/FirebaseNotifierService.html":{},"controllers/IssController.html":{},"injectables/IssService.html":{},"classes/MessageDto.html":{}}}],["token_uri",{"_index":177,"title":{},"body":{"injectables/FirebaseNotifierService.html":{}}}],["touch",{"_index":372,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":87,"title":{},"body":{"classes/CreateSubscriptionDto.html":{},"classes/MessageDto.html":{},"dependencies.html":{}}}],["true",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"injectables/UserService.html":{}}}],["try",{"_index":141,"title":{},"body":{"injectables/ExpoNotifierService.html":{},"injectables/FirebaseNotifierService.html":{},"controllers/UserController.html":{}}}],["twitter",{"_index":378,"title":{},"body":{"index.html":{}}}],["type",{"_index":77,"title":{},"body":{"classes/CreateSubscriptionDto.html":{},"classes/CreateUserDto.html":{},"injectables/ExpoNotifierService.html":{},"injectables/FirebaseNotifierService.html":{},"interfaces/IMessage.html":{},"controllers/IssController.html":{},"injectables/IssService.html":{},"classes/MessageDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":335,"title":{},"body":{"index.html":{}}}],["ui",{"_index":315,"title":{},"body":{"dependencies.html":{}}}],["unexpected",{"_index":249,"title":{},"body":{"controllers/UserController.html":{}}}],["unit",{"_index":349,"title":{},"body":{"index.html":{}}}],["upsert",{"_index":272,"title":{},"body":{"injectables/UserService.html":{}}}],["uri",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["usefactory",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":233,"title":{"interfaces/User.html":{}},"body":{"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.controller",{"_index":254,"title":{},"body":{"modules/UserModule.html":{}}}],["user.dto.ts",{"_index":96,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:5",{"_index":98,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:8",{"_index":99,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.service",{"_index":244,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user/user.module",{"_index":37,"title":{},"body":{"modules/AppModule.html":{}}}],["usercontroller",{"_index":238,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["usermodel",{"_index":265,"title":{},"body":{"injectables/UserService.html":{}}}],["usermodule",{"_index":14,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["userschema",{"_index":255,"title":{},"body":{"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userservice",{"_index":243,"title":{"injectables/UserService.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["valid",{"_index":128,"title":{},"body":{"injectables/ExpoNotifierService.html":{}}}],["valid('development",{"_index":396,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validatenested",{"_index":89,"title":{},"body":{"classes/CreateSubscriptionDto.html":{},"classes/MessageDto.html":{}}}],["validatenested()@type(undefined",{"_index":84,"title":{},"body":{"classes/CreateSubscriptionDto.html":{}}}],["validationschema",{"_index":44,"title":{},"body":{"modules/AppModule.html":{}}}],["validator",{"_index":90,"title":{},"body":{"classes/CreateSubscriptionDto.html":{},"classes/CreateUserDto.html":{},"classes/MessageDto.html":{},"dependencies.html":{}}}],["value",{"_index":392,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":283,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":388,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["watch",{"_index":345,"title":{},"body":{"index.html":{}}}],["website",{"_index":376,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":365,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":15,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/IssModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCommonModule->AppModule\n\n\n\n\n\nIssModule\n\nIssModule\n\nAppModule -->\n\nIssModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            IssController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            IssModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { ConfigModule } from '@nestjs/config';\nimport { MongooseModule } from '@nestjs/mongoose';\n\nimport { CommonModule } from './common/common.module';\n\nimport { ConfigSchema } from './config'\nimport { IssController } from './iss/iss.controller';\nimport { IssModule } from './iss/iss.module';\nimport { UserModule } from './user/user.module';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      ignoreEnvFile: process.env.NODE_ENV === 'production',\n      isGlobal: true,\n      validationSchema: ConfigSchema\n    }),\n    CommonModule,\n    MongooseModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        uri: configService.get('MONGODB_URI'),\n      }),\n      inject: [ConfigService],\n    }),\n\n    IssModule,\n\n    UserModule\n  ],\n  controllers: [IssController],\n  providers: [],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CommonModule.html":{"url":"modules/CommonModule.html","title":"module - CommonModule","body":"\n                   \n\n\n\n\n    Modules\n    CommonModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CommonModule\n\n\n\ncluster_CommonModule_exports\n\n\n\ncluster_CommonModule_providers\n\n\n\n\nExpoNotifierService \n\nExpoNotifierService \n\n\n\nFirebaseNotifierService \n\nFirebaseNotifierService \n\n\n\nCommonModule\n\nCommonModule\n\nExpoNotifierService  -->\n\nCommonModule->ExpoNotifierService \n\n\n\nFirebaseNotifierService  -->\n\nCommonModule->FirebaseNotifierService \n\n\n\n\n\nExpoNotifierService\n\nExpoNotifierService\n\nCommonModule -->\n\nExpoNotifierService->CommonModule\n\n\n\n\n\nFirebaseNotifierService\n\nFirebaseNotifierService\n\nCommonModule -->\n\nFirebaseNotifierService->CommonModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/common/common.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ExpoNotifierService\n                        \n                        \n                            FirebaseNotifierService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ExpoNotifierService\n                        \n                        \n                            FirebaseNotifierService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { FirebaseNotifierService } from './firebase-notifier/firebase-notifier.service';\nimport { ExpoNotifierService } from './expo-notifier/expo-notifier.service';\n\n@Module({\n  providers: [FirebaseNotifierService, ExpoNotifierService],\n  exports: [FirebaseNotifierService, ExpoNotifierService],\n})\nexport class CommonModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSubscriptionDto.html":{"url":"classes/CreateSubscriptionDto.html","title":"class - CreateSubscriptionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSubscriptionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/iss/dto/create-subscription.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                deviceId\n                            \n                            \n                                    Readonly\n                                message\n                            \n                            \n                                    Readonly\n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            deviceId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/iss/dto/create-subscription.dto.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MessageDto\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ValidateNested()@Type(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/iss/dto/create-subscription.dto.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/iss/dto/create-subscription.dto.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from 'class-transformer';\nimport { IsString, IsObject, ValidateNested } from 'class-validator';\n\nclass MessageDto {\n  @IsString()\n  body: string\n\n  @IsObject()\n  data: object\n}\n\nexport class CreateSubscriptionDto {\n  @IsString()\n  readonly token: string\n\n  @IsString()\n  readonly deviceId: string\n\n  @ValidateNested()\n  @Type(() => MessageDto)\n  readonly message: MessageDto\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/create-user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                deviceId\n                            \n                            \n                                    Readonly\n                                pushToken\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            deviceId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/create-user.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            pushToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/create-user.dto.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString } from 'class-validator';\n\nexport class CreateUserDto {\n  @IsString()\n  readonly deviceId: string\n\n  @IsString()\n  readonly pushToken: string\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExpoNotifierService.html":{"url":"injectables/ExpoNotifierService.html","title":"injectable - ExpoNotifierService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ExpoNotifierService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/expo-notifier/expo-notifier.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                expo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                send\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/common/expo-notifier/expo-notifier.service.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            send\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    send(token: string, message: IMessage)\n                \n            \n\n\n            \n                \n                    Defined in src/common/expo-notifier/expo-notifier.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                IMessage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Expo\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/expo-notifier/expo-notifier.service.ts:8\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Expo, ExpoPushMessage, ExpoPushTicket } from 'expo-server-sdk'\n\nimport { IMessage } from './interfaces'\n\n@Injectable()\nexport class ExpoNotifierService {\n  expo: Expo\n\n  constructor() {\n    this.expo = new Expo()\n  }\n\n  // https://github.com/expo/expo-server-sdk-node\n  async send(token: string, message: IMessage): Promise {\n    if (!Expo.isExpoPushToken(token)) {\n      const message = `Push token ${token} is not a valid Expo push token`\n      throw new Error(message)\n    }\n\n    // Construct a message (see https://docs.expo.io/versions/latest/guides/push-notifications)\n    const payload = [{\n      to: token,\n      sound: 'default',\n      body: message.body,\n      data: message.data\n    }]\n\n    let response: ExpoPushTicket[]\n    try {\n      response = await this.expo.sendPushNotificationsAsync(payload as ExpoPushMessage[])\n    } catch (error) {\n      // TODO: Logger\n      console.log('Error sending message : ', error)\n      throw error\n    }\n\n    // TODO: Logger\n    console.log('Successfully sent message:', response);\n    return JSON.stringify(response)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FirebaseNotifierService.html":{"url":"injectables/FirebaseNotifierService.html","title":"injectable - FirebaseNotifierService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FirebaseNotifierService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/firebase-notifier/firebase-notifier.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                SDKCredentials\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                send\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/common/firebase-notifier/firebase-notifier.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            send\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    send(token: string, message: IMessage)\n                \n            \n\n\n            \n                \n                    Defined in src/common/firebase-notifier/firebase-notifier.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                IMessage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            SDKCredentials\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/firebase-notifier/firebase-notifier.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\n\nimport * as admin from 'firebase-admin';\n\nimport { IMessage } from './interfaces'\n\n@Injectable()\nexport class FirebaseNotifierService {\n  private SDKCredentials: any\n\n  constructor(private configService: ConfigService) {\n     this.SDKCredentials = {\n      \"type\": this.configService.get('FIREBASE_TYPE'),\n      \"project_id\": this.configService.get('FIREBASE_PROJECT_ID'),\n      \"private_key_id\": this.configService.get('FIREBASE_PRIVATE_KEY_ID'),\n      \"private_key\": this.configService.get('FIREBASE_PRIVATE_KEY').replace(/\\\\n/g, '\\n'),\n      \"client_email\": this.configService.get('FIREBASE_CLIENT_EMAIL'),\n      \"client_id\": this.configService.get('FIREBASE_CLIENT_ID'),\n      \"auth_uri\": this.configService.get('FIREBASE_AUTH_URI'),\n      \"token_uri\": this.configService.get('FIREBASE_TOKEN_URI'),\n      \"auth_provider_x509_cert_url\": this.configService.get('FIREBASE_AUTH_PROVIDER_X509_CERT_URL'),\n      \"client_x509_cert_url\": this.configService.get('FIREBASE_CLIENT_X509_CERT_URL'),\n    }\n\n    admin.initializeApp({\n      credential: admin.credential.cert(this.SDKCredentials)\n    })\n  }\n\n  // https://firebase.google.com/docs/cloud-messaging/send-message\n  async send(token: string, message: IMessage) {\n    const payload = {\n      data: { ...message },\n      token\n    }\n\n    let response: string\n    try {\n      response = await admin.messaging().send(payload)\n    } catch (error) {\n      // TODO: Logger\n      console.log('Error sending message : ', error)\n      throw error\n    }\n\n    // TODO: Logger\n    console.log('Successfully sent message:', response);\n\n    return response\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMessage.html":{"url":"interfaces/IMessage.html","title":"interface - IMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/expo-notifier/interfaces/IMessage.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        body\n                                \n                                \n                                        data\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                    \n                                \n                                \n                                    \n                                        body:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:         IMessageData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IMessageData\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IMessageData } from '.'\n\nexport default interface IMessage {\n  body: string\n  data: IMessageData\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMessage-1.html":{"url":"interfaces/IMessage-1.html","title":"interface - IMessage-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/firebase-notifier/interfaces/IMessage.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        string\n\n                    \n                \n                        \n                            \n                                Defined in src/common/firebase-notifier/interfaces/IMessage.ts:1\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        export default interface IMessage {\n  [key: string]: string\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMessageData.html":{"url":"interfaces/IMessageData.html","title":"interface - IMessageData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IMessageData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/expo-notifier/interfaces/IMessageData.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        string\n\n                    \n                \n                        \n                            \n                                Defined in src/common/expo-notifier/interfaces/IMessageData.ts:1\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        export default interface IMessageData {\n  [key: string]: string\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/IssController.html":{"url":"controllers/IssController.html","title":"controller - IssController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  IssController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/iss/iss.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                iss\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createSubscription\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createSubscription\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createSubscription(createSubscriptionDto: CreateSubscriptionDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/iss/iss.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createSubscriptionDto\n                                    \n                                                CreateSubscriptionDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Body } from '@nestjs/common';\nimport { IssService } from './iss.service'\n\nimport { CreateSubscriptionDto } from './dto'\n\n@Controller('iss')\nexport class IssController {\n  constructor(public issService: IssService) {}\n\n  @Post()\n  async createSubscription(@Body() createSubscriptionDto: CreateSubscriptionDto): Promise {\n    const { token, deviceId, message } = createSubscriptionDto\n\n    console.log('token', token)\n    console.log('deviceId', deviceId)\n\n    const response: string = await this.issService.createSubscription(token, message)\n\n    return response\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IssModule.html":{"url":"modules/IssModule.html","title":"module - IssModule","body":"\n                   \n\n\n\n\n    Modules\n    IssModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_IssModule\n\n\n\ncluster_IssModule_imports\n\n\n\ncluster_IssModule_exports\n\n\n\ncluster_IssModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nIssModule\n\nIssModule\n\nIssModule -->\n\nCommonModule->IssModule\n\n\n\n\n\nIssService \n\nIssService \n\nIssService  -->\n\nIssModule->IssService \n\n\n\n\n\nIssService\n\nIssService\n\nIssModule -->\n\nIssService->IssModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/iss/iss.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            IssService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            IssController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            IssService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { IssController } from './iss.controller';\nimport { IssService } from './iss.service';\n\nimport { CommonModule } from '../common/common.module'\n\n@Module({\n  imports: [CommonModule],\n  controllers: [IssController],\n  providers: [IssService],\n  exports: [IssService]\n})\nexport class IssModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IssService.html":{"url":"injectables/IssService.html","title":"injectable - IssService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  IssService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/iss/iss.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                notifierService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createSubscription\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(notifierService: NotifierService)\n                    \n                \n                        \n                            \n                                Defined in src/iss/iss.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notifierService\n                                                  \n                                                        \n                                                                    NotifierService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createSubscription\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createSubscription(token, message)\n                \n            \n\n\n            \n                \n                    Defined in src/iss/iss.service.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notifierService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NotifierService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/iss/iss.service.ts:6\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ExpoNotifierService as NotifierService } from '../common/expo-notifier/expo-notifier.service';\n\n@Injectable()\nexport class IssService {\n  constructor(public notifierService: NotifierService) {}\n\n  async createSubscription(token, message) {\n    return this.notifierService.send(token, message)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MessageDto.html":{"url":"classes/MessageDto.html","title":"class - MessageDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MessageDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/iss/dto/create-subscription.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                body\n                            \n                            \n                                data\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            body\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/iss/dto/create-subscription.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsObject()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/iss/dto/create-subscription.dto.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from 'class-transformer';\nimport { IsString, IsObject, ValidateNested } from 'class-validator';\n\nclass MessageDto {\n  @IsString()\n  body: string\n\n  @IsObject()\n  data: object\n}\n\nexport class CreateSubscriptionDto {\n  @IsString()\n  readonly token: string\n\n  @IsString()\n  readonly deviceId: string\n\n  @ValidateNested()\n  @Type(() => MessageDto)\n  readonly message: MessageDto\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/interfaces/user.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        deviceId\n                                \n                                \n                                        pushToken\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        deviceId\n                                    \n                                \n                                \n                                    \n                                        deviceId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pushToken\n                                    \n                                \n                                \n                                    \n                                        pushToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document } from 'mongoose';\n\nexport interface User extends Document {\n  deviceId: string\n  pushToken: string\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Body } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { CreateUserDto } from './dto';\n\n@Controller('user')\nexport class UserController {\n  constructor(public userService: UserService) {}\n\n  @Post()\n  async createUser(@Body() createUserDto: CreateUserDto): Promise {\n    let user\n\n    try {\n      user = await this.userService.create(createUserDto)\n    } catch (error) {\n      console.log('UserController.createUser : Unexpected error occured', error)\n      throw error\n    }\n\n    return user\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserService\n\nUserService\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\n\nimport { UserController } from './user.controller';\nimport { UserService } from './user.service';\n\nimport { UserSchema } from './schemas'\n\nexport const Feature = 'User'\n\n@Module({\n  imports: [MongooseModule.forFeature([{ name: Feature, schema: UserSchema }])],\n  controllers: [UserController],\n  providers: [UserService]\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createUserPayload: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserPayload\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { User } from './interfaces';\nimport { CreateUserDto } from './dto'\n\n\n\n@Injectable()\nexport class UserService {\n  constructor(@InjectModel('User') private userModel: Model) {}\n\n  async create(createUserPayload: CreateUserDto) { \n    const { deviceId } = createUserPayload\n    const payload = { ...createUserPayload }\n\n    return this.userModel.updateOne(\n      { deviceId },\n      payload,\n      { upsert: true, setDefaultsOnInsert: true }\n    )\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/common/expo-notifier/expo-notifier.service.ts\n            \n            injectable\n            ExpoNotifierService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/expo-notifier/interfaces/IMessage.ts\n            \n            interface\n            IMessage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/expo-notifier/interfaces/IMessageData.ts\n            \n            interface\n            IMessageData\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/firebase-notifier/firebase-notifier.service.ts\n            \n            injectable\n            FirebaseNotifierService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/firebase-notifier/interfaces/IMessage.ts\n            \n            interface\n            IMessage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/config.schema.ts\n            \n            variable\n            ConfigSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/iss/dto/create-subscription.dto.ts\n            \n            class\n            CreateSubscriptionDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/iss/dto/create-subscription.dto.ts\n            \n            class\n            MessageDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/iss/iss.controller.ts\n            \n            controller\n            IssController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/iss/iss.service.ts\n            \n            injectable\n            IssService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/interfaces/user.interface.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/schemas/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/user/user.module.ts\n            \n            variable\n            Feature\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @hapi/joi : ^17.1.1\n        \n            @nestjs/common : ^7.0.0\n        \n            @nestjs/config : ^0.4.0\n        \n            @nestjs/core : ^7.0.0\n        \n            @nestjs/mongoose : ^6.4.0\n        \n            @nestjs/platform-express : ^7.0.0\n        \n            @nestjs/swagger : ^4.5.1\n        \n            class-transformer : ^0.2.3\n        \n            class-validator : ^0.12.0-rc.0\n        \n            expo-server-sdk : ^3.4.0\n        \n            firebase-admin : ^8.10.0\n        \n            mongoose : ^5.9.7\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.5.4\n        \n            swagger-ui-express : ^4.1.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications, heavily inspired by Angular.\n    \n\n\n\n\n\n\n\n\n\n  \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\n  Nest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CommonModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IssModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_CommonModule\n\n\n\ncluster_CommonModule_exports\n\n\n\ncluster_CommonModule_providers\n\n\n\ncluster_IssModule\n\n\n\ncluster_IssModule_exports\n\n\n\ncluster_IssModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nIssModule\n\nIssModule\n\nIssModule -->\n\nCommonModule->IssModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCommonModule->AppModule\n\n\n\n\n\nExpoNotifierService \n\nExpoNotifierService \n\nExpoNotifierService  -->\n\nCommonModule->ExpoNotifierService \n\n\n\n\n\nFirebaseNotifierService \n\nFirebaseNotifierService \n\nFirebaseNotifierService  -->\n\nCommonModule->FirebaseNotifierService \n\n\n\nAppModule -->\n\nIssModule->AppModule\n\n\n\n\n\nIssService \n\nIssService \n\nIssService  -->\n\nIssModule->IssService \n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nExpoNotifierService\n\nExpoNotifierService\n\nCommonModule -->\n\nExpoNotifierService->CommonModule\n\n\n\n\n\nFirebaseNotifierService\n\nFirebaseNotifierService\n\nCommonModule -->\n\nFirebaseNotifierService->CommonModule\n\n\n\n\n\nIssService\n\nIssService\n\nIssModule -->\n\nIssService->IssModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ConfigSchema   (src/.../config.schema.ts)\n                        \n                        \n                            Feature   (src/.../user.module.ts)\n                        \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/config.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ConfigSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Joi.object({\n  NODE_ENV: Joi.string()\n    .valid('development', 'production', 'test', 'provision')\n    .default('development'),\n\n  PORT: Joi.number().default(3000),\n\n  FIREBASE_TYPE: Joi.string().required(),\n  FIREBASE_PROJECT_ID: Joi.string().required(),\n  FIREBASE_PRIVATE_KEY_ID: Joi.string().required(),\n  FIREBASE_PRIVATE_KEY: Joi.string().required(),\n  FIREBASE_CLIENT_EMAIL: Joi.string().required(),\n  FIREBASE_CLIENT_ID: Joi.string().required(),\n  FIREBASE_AUTH_URI: Joi.string().required(),\n  FIREBASE_TOKEN_URI: Joi.string().required(),\n  FIREBASE_AUTH_PROVIDER_X509_CERT_URL: Joi.string().required(),\n  FIREBASE_CLIENT_X509_CERT_URL: Joi.string().required(),\n})\n                        \n                    \n\n\n            \n        \n\n    src/user/user.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Feature\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'User'\n                        \n                    \n\n\n            \n        \n\n    src/user/schemas/user.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            UserSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new mongoose.Schema({\n  deviceId: String,\n  pushToken: String\n})\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
